import { connect } from "react-redux";
import Poll from "./Poll";

const Dashboard = (props) => {
  console.log("Props from Dashboard: ", props);
  // props are generated by mapStateToProps (and dispatch from store)

  const { authedUser, questionIds, questions } = props;

  let questionsArr = [];
  for (let i = 0; i < questionIds.length; i++) {
    questionsArr.push(questions[questionIds[i]]);
  }

  console.log("arr", questionsArr);
  const answeredQuestions = questionsArr.filter(
    (q) =>
      q.optionOne.votes.includes(authedUser) ||
      q.optionTwo.votes.includes(authedUser)
  );

  console.log("answered", answeredQuestions);

  // const filteredAndSorted = () =>
  //   questionIds.filter((id) => answeredQuestions.contains(id));

  return (
    <div>
      <h1>Answered</h1>
      <ul>
        {answeredQuestions.length > 0 ? (
          answeredQuestions.map((q) => (
            <li key={q.id}>
              <Poll id={q.id} />
            </li>
          ))
        ) : (
          <div>no answered polls available</div>
        )}
      </ul>
    </div>
  );
};

// {questions} => piece of state in the store this component cares about
const mapStateToProps = ({ questions, authedUser }) => ({
  questionIds: Object.keys(questions).sort(
    (a, b) => questions[b].timestamp - questions[a].timestamp
  ),
  authedUser,
  questions,
});

export default connect(mapStateToProps)(Dashboard);
